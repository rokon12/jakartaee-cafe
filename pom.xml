<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.eclipse</groupId>
  <artifactId>jakartaee-cafe</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>jakartaee-cafe</name>
  <description>
    This is a very simple Jakarta EE application generated by the official Eclipse
    Starter. It is a simple RESTful CRUD service that uses a
    representative set of Jakarta EE technologies such as REST, Enterprise
    Beans, CDI, Persistence, JSON Binding and Bean Validation.
  </description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.report.sourceEncoding>UTF-8</project.report.sourceEncoding>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
    <jakartaee-api.version>8.0.0</jakartaee-api.version>

    <maven-compiler-plugin.version>3.10.0</maven-compiler-plugin.version>
    <maven-war-plugin.version>3.3.2</maven-war-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
    <maven-dependency-plugin.version>3.2.0</maven-dependency-plugin.version>

    <!-- Arquillian BOM -->
    <arquillian-bom.version>1.6.0.Final</arquillian-bom.version>
    <arquillian-liberty.version>1.0.8</arquillian-liberty.version>

    <!-- OpenLiberty server -->
    <liberty.runtime.version>21.0.0.12</liberty.runtime.version>
    <liberty-maven-plugin.version>3.5.1</liberty-maven-plugin.version>

    <!-- Apache Derby -->
    <derby.version>10.14.2.0</derby.version>

    <!-- By default, skip tests -->
    <skipTests>true</skipTests>
  </properties>

  <dependencyManagement>
    <!-- Arquillian Bill Of Management used to reduce collision between testing dependencies.
                Using a dependency manager we don't need to specify the version of each Arquillian dependency. -->
    <dependencies>
      <dependency>
        <groupId>jakarta.platform</groupId>
        <artifactId>jakarta.jakartaee-api</artifactId>
        <version>${jakartaee-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>${arquillian-bom.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>${derby.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap</groupId>
      <artifactId>shrinkwrap-api</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <skipTests>${skipTests}</skipTests>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <id>default-test</id>
            <configuration>
              <excludes>
                <exclude>**/it/**</exclude>
              </excludes>
              <reportsDirectory>
                ${project.build.directory}/test-reports/unit
              </reportsDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <configuration>
          <skipITs>${skipTests}</skipITs>
        </configuration>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <includes>
                <include>**/it/**</include>
              </includes>
              <reportsDirectory>
                ${project.build.directory}/test-reports/it
              </reportsDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>liberty</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${maven-dependency-plugin.version}</version>
            <executions>
              <execution>
                <id>copy</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.derby</groupId>
                  <artifactId>derby</artifactId>
                  <version>${derby.version}</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources
              </outputDirectory>
            </configuration>
          </plugin>
          <!-- Enable liberty-maven-plugin -->
          <plugin>
            <groupId>io.openliberty.tools</groupId>
            <artifactId>liberty-maven-plugin</artifactId>
            <version>${liberty-maven-plugin.version}</version>
            <configuration>
              <copyDependencies>
                <location>${project.build.directory}/liberty/wlp/usr/shared/resources</location>
                <dependency>
                  <groupId>org.apache.derby</groupId>
                  <artifactId>derby</artifactId>
                </dependency>
                <dependency>
                  <groupId>org.apache.derby</groupId>
                  <artifactId>derbytools</artifactId>
                </dependency>
                <dependency>
                  <groupId>org.apache.derby</groupId>
                  <artifactId>derbyshared</artifactId>
                </dependency>
              </copyDependencies>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- Run with: mvn clean verify -Parq-liberty-managed -->
      <id>arq-liberty-managed</id>
      <properties>
        <skipTests>false</skipTests>
      </properties>
      <dependencies>
        <dependency>
          <groupId>io.openliberty.arquillian</groupId>
          <artifactId>arquillian-liberty-managed</artifactId>
          <version>${arquillian-liberty.version}</version>
        </dependency>
      </dependencies>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/arq-liberty-managed</directory>
            <includes>
              <include>*</include>
            </includes>
            <excludes>
              <exclude>server.xml</exclude>
            </excludes>
          </testResource>
          <testResource>
            <directory>src/test/arq-liberty-managed</directory>
            <includes>
              <include>server.xml</include>
            </includes>
            <targetPath>
              ${project.build.directory}/wlp/usr/servers/defaultServer
            </targetPath>
          </testResource>
        </testResources>

        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${maven-dependency-plugin.version}</version>
            <executions>
              <execution>
                <id>copy</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.apache.derby</groupId>
                      <artifactId>derby</artifactId>
                      <version>${derby.version}</version>
                      <type>jar</type>
                      <overWrite>false</overWrite>
                    </artifactItem>
                  </artifactItems>
                  <outputDirectory>${project.build.directory}/wlp/usr/shared/resources
                  </outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>unpack</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>io.openliberty</groupId>
                      <artifactId>openliberty-runtime</artifactId>
                      <version>${liberty.runtime.version}</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                    <artifactItem>
                      <groupId>io.openliberty.arquillian</groupId>
                      <artifactId>arquillian-liberty-support</artifactId>
                      <version>${arquillian-liberty.version}</version>
                      <type>zip</type>
                      <classifier>feature</classifier>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}/wlp/usr</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <configuration>
              <environmentVariables>
                <WLP_HOME>${project.build.directory}/wlp</WLP_HOME>
              </environmentVariables>
              <systemPropertyVariables>
                <arquillian.launch>liberty-managed</arquillian.launch>
                <java.util.logging.config.file>
                  ${project.build.testOutputDirectory}/logging.properties
                </java.util.logging.config.file>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
